ext.defaultScala_2_11_Version = '2.11.12'
ext.defaultScala_2_12_Version = '2.12.10'

if (!hasProperty('scalaVersion')) {
    ext.scalaVersion = ext.defaultScala_2_12_Version
}

if (scalaVersion.startsWith('2.11')) {
    ext.baseScalaVersion = '2.11'
} else if (scalaVersion.startsWith('2.12')) {
    ext.baseScalaVersion = '2.12'
} else {
    ext.baseScalaVersion = scalaVersion
}

ext {
    bytebuddyVersion    = "1.10.3"
    findBugsVersion     = "3.0.2"
    logbackVersion      = "1.3.0-alpha4"
    mockitoVersion      = "3.1.0"
    pegdownVersion      = "1.6.0"
    reactorVersion      = "3.3.1.RELEASE"
    scalaLoggingVersion = "3.9.0"
    scalatestVersion    = "3.0.5-M1"
    scoverageVersion    = "1.4.0-M3"
}

ext.libraries = [
        findbugs            : "com.google.code.findbugs:jsr305:$findBugsVersion",
        logback             : "ch.qos.logback:logback-classic:$logbackVersion",
        mockitoInline       : "org.mockito:mockito-inline:$mockitoVersion",
        pegdown             : "org.pegdown:pegdown:$pegdownVersion",
        reactorCore         : "io.projectreactor:reactor-core:$reactorVersion",
        reactorTest         : "io.projectreactor:reactor-test:$reactorVersion",
        scalaLibrary        : "org.scala-lang:scala-library:$scalaVersion",
        scalaLogging        : "com.typesafe.scala-logging:scala-logging_$baseScalaVersion:$scalaLoggingVersion",
        scalatest           : "org.scalatest:scalatest_$baseScalaVersion:$scalatestVersion",
        scoveragePlugin     : "org.scoverage:scalac-scoverage-plugin_$baseScalaVersion:$scoverageVersion",
        scoverageRuntime    : "org.scoverage:scalac-scoverage-runtime_$baseScalaVersion:$scoverageVersion"
]
